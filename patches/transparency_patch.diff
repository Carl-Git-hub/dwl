diff --git a/config.def.h b/config.def.h
index a680eac..07667c3 100644
--- a/config.def.h
+++ b/config.def.h
@@ -15,8 +15,6 @@ static const float focuscolor[]            = {1.0, 0.0, 0.0, 1.0};
 /* To conform the xdg-protocol, set the alpha to zero to restore the old behavior */
 static const float fullscreen_bg[]         = {0.1, 0.1, 0.1, 1.0};
 static const int noidlefullscreen          = 1;  /* disable idle when fullscreen */
-static const float background_opacity      = 0.85;
-static const float foreground_opacity      = 1;
 
 /* Autostart */
 static const char *const autostart[] = {
diff --git a/config.h b/config.h
index 880e0ae..a8fa88c 100644
--- a/config.h
+++ b/config.h
@@ -15,8 +15,6 @@ static const float focuscolor[]            = {1.0, 0.0, 0.0, 0};
 /* To conform the xdg-protocol, set the alpha to zero to restore the old behavior */
 static const float fullscreen_bg[]         = {0.1, 0.1, 0.1, 1.0};
 static const int noidlefullscreen          = 1;  /* disable idle when fullscreen */
-static const float background_opacity      = 0.95;
-static const float foreground_opacity      = 1;
 
 /* Autostart */
 static const char *const autostart[] = {
diff --git a/dwl.c b/dwl.c
index 6269d32..c6994a7 100644
--- a/dwl.c
+++ b/dwl.c
@@ -127,7 +127,6 @@ typedef struct {
 	struct wl_listener set_hints;
 #endif
 	unsigned int bw;
-	float opacity;
 	uint32_t tags;
 	int isfloating, isurgent, isfullscreen;
 	uint32_t resize; /* configure serial of a pending resize */
@@ -313,7 +312,6 @@ static void requeststartdrag(struct wl_listener *listener, void *data);
 static void requestmonstate(struct wl_listener *listener, void *data);
 static void resize(Client *c, struct wlr_box geo, int interact);
 static void run(char *startup_cmd);
-static void scenebuffersetopacity(struct wlr_scene_buffer *buffer, int sx, int sy, void *user_data);
 static void setcursor(struct wl_listener *listener, void *data);
 static void setfloating(Client *c, int floating);
 static void setfullscreen(Client *c, int fullscreen);
@@ -1071,7 +1069,6 @@ createnotify(struct wl_listener *listener, void *data)
 	c = xdg_surface->data = ecalloc(1, sizeof(*c));
 	c->surface.xdg = xdg_surface;
 	c->bw = borderpx;
-	c->opacity = background_opacity;
 
 	LISTEN(&xdg_surface->surface->events.commit, &c->commit, commitnotify);
 	LISTEN(&xdg_surface->surface->events.map, &c->map, mapnotify);
@@ -1260,16 +1257,6 @@ destroysessionmgr(struct wl_listener *listener, void *data)
 	wl_list_remove(&listener->link);
 }
 
-void
-scenebuffersetopacity(struct wlr_scene_buffer *buffer, int sx, int sy, void *data)
-{
-	Client *c = data;
-	/* xdg-popups are children of Client.scene, we do not have to worry about
-	   messing with them. */
-	wlr_scene_buffer_set_opacity(buffer, c->isfullscreen ? 1 : c->opacity);
-}
-
-
 Monitor *
 dirtomon(enum wlr_direction dir)
 {
@@ -1345,8 +1332,6 @@ focusclient(Client *c, int lift)
 			if (old_c->foreign_toplevel) {
 				wlr_foreign_toplevel_handle_v1_set_activated(old_c->foreign_toplevel, 0);
 			}
-			old_c->opacity = background_opacity;
-			wlr_scene_node_for_each_buffer(&old_c->scene_surface->node, scenebuffersetopacity, old_c);
 		}
 	}
 	printstatus();
@@ -1369,9 +1354,6 @@ focusclient(Client *c, int lift)
 
 	/* Activate the new client */
 	client_activate_surface(client_surface(c), 1);
-
-	c->opacity = foreground_opacity;
-	wlr_scene_node_for_each_buffer(&c->scene_surface->node, scenebuffersetopacity, c);
 }
 
 void
@@ -1791,9 +1773,6 @@ unset_fullscreen:
 	wl_list_for_each(w, &clients, link)
 		if (w != c && w->isfullscreen && m == w->mon && (w->tags & c->tags))
 			setfullscreen(w, 0);
-
-	/* Set initial transparency */
-	wlr_scene_node_for_each_buffer(&c->scene_surface->node, scenebuffersetopacity, c);
 }
 
 void
